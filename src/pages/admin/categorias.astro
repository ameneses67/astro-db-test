---
// Render mode
export const prerender = false;

// Astro api
import { GET } from "../api/categorias/index.json";
import { db, Category } from "astro:db";

// Astro tools
import { Icon } from "astro-icon/components";

// Types
import type { CategoryType } from "src/env";

// Utilities
import { getFormattedDate } from "@libs/utils";

// Layouts
import BaseLayout from "@layouts/BaseLayout.astro";

// Components
import Heading from "@components/ui/Heading.astro";
import Section from "@ui/Section.astro";
import Button from "@ui/Button.astro";
import DelActionButton from "@ui/DelActionButton";

// Data
const categories = await db.select().from(Category);

// Head metadata
const title = "Categorías";
const description = "Listado de categorías";
---

<BaseLayout
	{title}
	{description}
>
	<Section>
		<div class="flex items-center justify-between">
			<Heading
				tagName="h1"
				size="h1"
				title="Categorías"
			>
				Administra las categorías de tu tienda
			</Heading>
			<Button
				href="/admin/nueva-categoria"
				color="accent"
				style="outline"
			>
				<Icon
					name="lucide:circle-plus"
					size={20}
				/>
				Crear nueva
			</Button>
		</div>
		<div>
			<table class="table table-zebra">
				<!-- head -->
				<thead>
					<tr>
						<th>Categoría / Id</th>
						<th>Descripción</th>
						<th>Imagen</th>
						<th>Fecha</th>
						<th>Acciones</th>
					</tr>
				</thead>
				<tbody>
					<!-- rows -->
					{
						categories.map((category) => (
							<tr>
								<th>
									<p>{category.name}</p>
									<p class="font-light">{category.id}</p>
								</th>
								<td>{category.description}</td>
								<td>{category.imagePath}</td>
								<td>{getFormattedDate(category.published)}</td>
								<td class="relative">
									<Button
										color="primary"
										style="ghost"
										classes="actions-btn"
									>
										<Icon name="lucide:ellipsis-vertical" />
									</Button>
									<ul class="menu absolute right-10 top-full z-10 hidden max-w-fit rounded-box bg-base-300">
										<li>
											<a
												class="cat-edit"
												data-id={category.id}
											>
												<Icon
													name="lucide:edit"
													class="h-5 w-5"
												/>
												Editar
											</a>
										</li>
										<li>
											<DelActionButton
												client:load
												id={category.id}
											/>
										</li>
									</ul>
								</td>
							</tr>
						))
					}
				</tbody>
			</table>
		</div>
	</Section>
</BaseLayout>

<script>
	const actionsBtn = document.querySelectorAll(".actions-btn") as NodeListOf<HTMLAnchorElement>;

	actionsBtn.forEach((btn) => btn.addEventListener("click", () => toggleActionsMenu(btn)));

	function toggleActionsMenu(btn: HTMLAnchorElement) {
		btn.nextElementSibling?.classList.toggle("hidden");
	}
</script>
