---
// Astro db
import { db, Category } from "astro:db";

// Astro tools
import { Icon } from "astro-icon/components";

// Layouts
import BaseLayout from "@layouts/BaseLayout.astro";

// Components
import Heading from "@components/ui/Heading.astro";
import Section from "@ui/Section.astro";
import Button from "@ui/Button.astro";
import { getFormattedDate } from "@libs/utils";

// Data
const categories = await db.select().from(Category);

// Head metadata
const title = "Categorías";
const description = "Listado de categorías";
---

<BaseLayout
	{title}
	{description}
>
	<Section>
		<div class="flex justify-between items-center">
			<Heading
				tagName="h1"
				size="h1"
				title="Categorías"
			>
				Administra las categorías de tu tienda
			</Heading>
			<Button
				href="/admin/nueva-categoria"
				color="accent"
				style="outline"
			>
				<Icon
					name="lucide:circle-plus"
					size={20}
				/>
				Crear nueva
			</Button>
		</div>
		<div class="overflow-x-auto">
			<table class="table table-zebra">
				<!-- head -->
				<thead>
					<tr>
						<th>Categoría / Id</th>
						<th>Descripción</th>
						<th>Imagen</th>
						<th>Fecha</th>
						<th>Acciones</th>
					</tr>
				</thead>
				<tbody>
					<!-- row 1 -->
					{
						categories.map((category) => (
							<tr>
								<th>
									<p>{category.name}</p>
									<p class="font-light">{category.id}</p>
								</th>
								<td>{category.description}</td>
								<td>{category.imagePath}</td>
								<td>{getFormattedDate(category.published)}</td>
								<td class="relative">
									<Button
										color="primary"
										style="ghost"
										classes="actions-btn"
									>
										<Icon name="lucide:ellipsis-vertical" />
									</Button>
									<ul
										id="actions-ul"
										class="menu bg-base-200 rounded-box max-w-fit absolute right-4 top-full z-10 hidden"
									>
										<li>
											<a
												id="cat-edit"
												data-id={category.id}
											>
												<Icon
													name="lucide:edit"
													class="h-5 w-5"
												/>
												Editar
											</a>
											<a
												id="cat-del"
												data-id={category.id}
											>
												<Icon
													name="lucide:trash-2"
													class="h-5 w-5"
												/>
												Borrar
											</a>
										</li>
									</ul>
								</td>
							</tr>
						))
					}
				</tbody>
			</table>
		</div>
	</Section>
</BaseLayout>

<script>
	import { db, eq, Category } from "astro:db";

	const actionsBtn = document.querySelectorAll(".actions-btn");
	console.log(actionsBtn);
	const actionsUl = document.querySelectorAll(
		"#actions-ul"
	) as NodeListOf<HTMLUListElement>;
	const catEditBtn = document.querySelectorAll(
		"#cat-edit"
	) as NodeListOf<HTMLAnchorElement>;
	const catDelBtn = document.querySelectorAll(
		"#cat-del"
	) as NodeListOf<HTMLAnchorElement>;

	// Show actions menu
	actionsBtn.forEach((btn) =>
		btn.addEventListener("click", () => console.log("click"))
	);

	// async function deleteCategory(id: string) {
	// 	await db.delete(Category).where(eq(Category.id, id));
	// }

	catDelBtn.forEach((cat) =>
		cat.addEventListener("click", () => {
			if (cat.parentElement?.parentElement) {
				cat.parentElement.parentElement.classList.toggle("hidden");
			}
			// deleteCategory(cat.dataset.id as string);
		})
	);
</script>
