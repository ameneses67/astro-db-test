---
// Render mode
export const prerender = false

// Tools
import { z } from 'zod'

// Layouts
import BaseLayout from '@layouts/BaseLayout.astro'

// Components
import Heading from '@components/ui/Heading.astro'
import Section from '@ui/Section.astro'
import CategoryForm from '@components/category/CategoryForm'
import NewCategoryForm from '@components/category/NewCategoryForm.astro'
import { categorySchema } from 'src/schemas/categoryForm'
import { db } from 'astro:db'
import { Category } from 'astro:db'
import { eq } from 'astro:db'

// Form submission
export const errors = { name: '', description: '', imagePath: '' }
if (Astro.request.method === 'POST') {
	try {
		errors.name = ''
		errors.description = ''
		errors.imagePath = ''

		const formData = await Astro.request.formData()
		const name = formData.get('name')
		const description = formData.get('description')
		const imagePath = (
			formData.get('imagePath') as {
				size: number
				type: string
				name: string
				lastModified: number
			}
		).name

		const data = {
			name,
			description,
			imagePath
		} as z.infer<typeof categorySchema>
		console.log(data)

		const regCat = await db
			.select()
			.from(Category)
			.where(eq(Category.name, data.name.toLowerCase()))

		if (regCat.length > 0) {
			errors.name += 'Esta categoría ya existe'
		}

		const formVal = categorySchema.safeParse(data)

		if (!formVal.success) {
			formVal.error.issues.map((e) => (errors[e.path[0] as keyof typeof errors] += e.message))
		} else {
			await db.insert(Category).values(formVal.data)

			return Astro.redirect('/admin/categorias')
		}
	} catch (error) {
		if (error instanceof Error) {
			console.log(error.message)
		}
	}
}

// Head metadata
const title = 'Nueva categoría'
const description = 'Crear nueva categoría'
---

<BaseLayout
	{title}
	{description}
>
	<Section>
		<Heading
			tagName="h1"
			size="h1"
			title="Crear categoría"
		>
			Añade una nueva categoría
		</Heading>
		<NewCategoryForm />
		<!-- <CategoryForm client:load /> -->
	</Section>
</BaseLayout>
