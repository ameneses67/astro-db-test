---
// Astro db
import { db, eq, Category, Subcategory, Brand, Size, Product } from "astro:db";

// Astro tools
import type { GetStaticPaths } from "astro";

// Layouts
import BaseLayout from "@layouts/BaseLayout.astro";

// Utils
import { slugify } from "@libs/utils";

// Components
import Section from "@ui/Section.astro";
import BillboardBody from "@components/billboard/BillboardBody.astro";
import BillboardHeader from "@components/billboard/BillboardHeader.astro";

// Routes
export const getStaticPaths = (async () => {
	const subcategories = await db
		.select()
		.from(Subcategory)
		.innerJoin(Category, eq(Subcategory.categoryId, Category.id));

	return subcategories.map((subcategory) => ({
		params: {
			subcategories: `${slugify(subcategory.Category.name)}/${slugify(subcategory.Subcategory.name)}/`,
		},
		props: { subcategory },
	}));
}) satisfies GetStaticPaths;

const { subcategories } = Astro.params;
const { subcategory } = Astro.props;

// Data
const products = await db
	.select()
	.from(Product)
	.leftJoin(Brand, eq(Product.brandId, Brand.id))
	.leftJoin(Size, eq(Product.sizeId, Size.id))
	.where(eq(Product.subcategoryId, subcategory.Subcategory.id));

// Head metadata
const title = subcategory.Subcategory.name;
const description = subcategory.Subcategory.name;
---

<BaseLayout
	{title}
	{description}
>
	<Section>
		<BillboardHeader
			id={subcategory.Subcategory.id}
			name={subcategory.Subcategory.name}
			description={subcategory.Subcategory.description}
			imagePath={subcategory.Subcategory.imagePath}
		/>
		<BillboardBody {products} />
	</Section>
</BaseLayout>
